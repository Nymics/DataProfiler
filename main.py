import pandas as pd
import streamlit as st
from st_aggrid import AgGrid
from streamlit_pandas_profiling import st_profile_report
from ydata_profiling import ProfileReport
# from PIL import Image
# from keras.preprocessing.image import load_img


if __name__ == '__main__':
    st.set_page_config(page_title='TRSS Data Profiler', layout='wide')  # Choose wide mode as the default setting

    # Add a logo (optional) in the sidebar
    # logo = load_img('DataExplorerLogo.png')
    # st.sidebar.image(logo, width=120)

    # Add the expander to provide some information about the app
    with st.sidebar.expander("About TRSS Data Profiler", expanded=True):
        st.write("""
            Welcome to TRSS Data Profiler. You can use this app to quickly generate a comprehensive data profiling report. \n\nThe app has the minimum mode (recommended) and the complete code. The complete code includes more sophisticated analysis such as correlation analysis or interactions between variables which may requires expensive computations.
         """)

    # Add an app title. Use css to style the title
    st.markdown(""" <style> .font {                                          
        font-size:30px ; font-family: 'Cooper Black'; color: #FF9633;} 
        </style> """, unsafe_allow_html=True)
    st.markdown('<p class="font">TRSS Data Profiler</p>',
                unsafe_allow_html=True)

    uploaded_file = st.file_uploader("Upload your csv file:", type=['csv'])
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)

        option1 = st.sidebar.radio(
            'What variables do you want to include in the report?',
            ('All variables', 'A subset of variables'))

        if option1 == 'All Variables':
            df = df

        elif option1 == 'A subset of variables':
            var_list = list(df.columns)
            option3 = st.sidebar.multiselect(
                'Select variable(s) you want to include in the report.',
                var_list)
            df = df[option3]

        option2 = st.sidebar.selectbox(
            'Choose Minimal Mode or Complete Mode',
            ('Minimal Mode', 'Complete Mode'))

        if option2 == 'Complete Mode':
            mode = 'complete'
            st.sidebar.warning(
                'The default minimal mode disables expensive computations such as correlations and duplicate row detection. Switching to complete mode may cause the app to run overtime or fail for large datasets due to computational limit.')
        elif option2 == 'Minimal Mode':
            mode = 'minimal'

        if uploaded_file is not None:
            grid_response = AgGrid(
                df,
                editable=True,
                height=300,
                width='100%',
            )

            updated = grid_response['data']
            df1 = pd.DataFrame(updated)

            if st.button('Generate Report'):
                if mode == 'complete':
                    profile = ProfileReport(df,
                                            title="User uploaded table",
                                            progress_bar=True,
                                            dataset={
                                                "description": 'This profiling report was generated by TRSS Data '
                                                               'Explorer',
                                                "copyright_holder": 'TRSS',
                                                "copyright_year": '2022'
                                            })
                    st_profile_report(profile)
                elif mode == 'minimal':
                    profile = ProfileReport(df1,
                                            minimal=True,
                                            title="User uploaded table",
                                            progress_bar=True,
                                            dataset={
                                                "description": 'This profiling report was generated by TRSS Data '
                                                               'Explorer',
                                                "copyright_holder": 'TRSS',
                                                "copyright_year": '2022'
                                            })
                    st_profile_report(profile)

